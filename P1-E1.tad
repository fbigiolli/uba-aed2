TAD secuenciaExtendida

    extiende: secuencia(α)

    otras operaciones:
        duplicar: secu(α) → secu(α)
        ∙≤∙: secu(α) × secu(α) → bool
        reverso: secu(α) → secu(α)
        capicua: secu(α) → bool

    axiomas: ∀s,t,u:secu(α),∀e,x,y:α
        duplicar(s)≡ if vacia?(s) then
          <>
        else
          prim(s) ∙ prim(s) ∙ duplicar(fin(s))
        fi

        s≤t ≡ if vacia?(s) ∨ vacia?(t) then
          vacia?(s)
        else
          if prim(s) ≤ prim(t) then //asumo que cuento con el operador leq para comparar dos caracteres
            fin(s) ≤ fin(t) //esto seria recursion sobre la funcion de secuencias.
          else
            false
          fi
        fi

        reverso(s): if vacia?(s) then
          <>
        else
          reverso(s)∘primero(s)
        fi

        capicua(s) ≡ if vacia?(s) then
          true
        else
          prim(s) = ult(s) ∧ capicua(com(fin(s)))
        fi

Fin TAD