TAD roseTreeExtendido

    extiende: roseTree

    otras operaciones:
        hoja?: roseTree(α) → bool 
        altura: roseTree(α) → nat
        maxAlturaHijos: secu(roseTree(α)) → nat //esta funcion es necesario definirla porque no podemos hacer recursion con la funcion altura ya que como parametro de entrada tiene un rosetree,e hijos devuelve sec de rosetrees.
        cantidadHojas: roseTree(α) → nat
        cantidadHojasHijos: secu(roseTree(α)) → nat
        podar: roseTree(α) → roseTree(α)
        podarHijos: secu(roseTree(α)) → secu(roseTree(α))
        ramas: roseTree(α) → secu(secu(α))
        ramasHijos: secu(rosetree(α)) → secu(secu(α))
        prefijarEnTodos: α × secu(secu(α)) → secu(secu(α))

    axiomas: ∀ r:roseTree(α), ∀ sr:secu(roseTree(α)), ∀as: secu(secu(α))
        hoja?(r) ≡ vacia?(hijos(r))
        altura(r) ≡ 1 + maxAlturaHijos(hijos(r))
        maxAlturaHijos(sr) ≡ if vacia?(s) then
                               0
                             else
                              max(altura(prim(s)),maxAlturaHijos(fin(s)))
                             fi
        cantidadHojas(r) ≡ if hoja?(r) then
                              1
                            else
                              cantidadHojasHijos(hijos(r))
                            fi

        cantidadHojasHijos(sr) ≡ if vacia?(sr) then
                                    0
                                  else
                                    cantidadHojas(prim(sr)) + cantidadHojasHijos(fin(sr))  
                                  fi

        podar(r) ≡ rose(raiz(r), podarHijos(hijos(r)))

        podarHijos(sr) ≡ if hoja?(prim(sr)) then
                          podarHijos(fin(sr))
                        else
                          podar(prim(sr)) ∙ podarHijos(fin(sr))
                        fi

        ramas(r) ≡ if hoja?(r) then
                    (raiz(r) ∙ <>) ∙ <>
                  else
                    prefijarEnTodos(raiz(r), ramasHijos(hijos(r)))
                  fi //idea: voy viendo los primeros de cada secuencia hasta q llego a una hoja, y llamo recursivamente a la funcion con el fin de la secu de modo que en algun momento me quede sin nodos posibles

        ramasHijos(sr) ≡ if vacia?(s) then
                          <>
                        else
                          ramas(prim(s)) & ramasHijos(fin(s))
                        fi

        prefijarEnTodos(a,as) ≡ if vacia?(as) then
                                <>
                              else
                                (a ∙ prim(as)) ∙ prefijarEnTodos(a,fin(as))
                              fi


        

  Fin TAD